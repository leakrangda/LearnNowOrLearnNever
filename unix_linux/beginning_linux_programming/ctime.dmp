
a.out:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x32b>
 248:	78 38                	js     282 <_init-0x31e>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 02                	add    %al,(%rdx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 06                	add    %al,(%rsi)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 20                	add    %ah,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 4f 81             	add    %cl,-0x7f(%rdi)
 286:	31 e1                	xor    %esp,%ecx
 288:	0b b3 d4 33 13 ea    	or     -0x15eccc2c(%rbx),%esi
 28e:	11 b8 40 e0 c3 af    	adc    %edi,-0x503c1fc0(%rax)
 294:	c0 de 37             	rcr    $0x37,%dh
 297:	46                   	rex.RX

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	39 00                	cmp    %eax,(%rax)
 2d2:	00 00                	add    %al,(%rax)
 2d4:	20 00                	and    %al,(%rax)
	...
 2e6:	00 00                	add    %al,(%rax)
 2e8:	12 00                	adc    (%rax),%al
 2ea:	00 00                	add    %al,(%rax)
 2ec:	12 00                	adc    (%rax),%al
	...
 2fe:	00 00                	add    %al,(%rax)
 300:	0b 00                	or     (%rax),%eax
 302:	00 00                	add    %al,(%rax)
 304:	12 00                	adc    (%rax),%al
	...
 316:	00 00                	add    %al,(%rax)
 318:	27                   	(bad)  
 319:	00 00                	add    %al,(%rax)
 31b:	00 12                	add    %dl,(%rdx)
	...
 32d:	00 00                	add    %al,(%rax)
 32f:	00 55 00             	add    %dl,0x0(%rbp)
 332:	00 00                	add    %al,(%rax)
 334:	20 00                	and    %al,(%rax)
	...
 346:	00 00                	add    %al,(%rax)
 348:	13 00                	adc    (%rax),%eax
 34a:	00 00                	add    %al,(%rax)
 34c:	12 00                	adc    (%rax),%al
	...
 35e:	00 00                	add    %al,(%rax)
 360:	64 00 00             	add    %al,%fs:(%rax)
 363:	00 20                	add    %ah,(%rax)
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 78 00             	add    %bh,0x0(%rax)
 37a:	00 00                	add    %al,(%rax)
 37c:	20 00                	and    %al,(%rax)
	...
 38e:	00 00                	add    %al,(%rax)
 390:	18 00                	sbb    %al,(%rax)
 392:	00 00                	add    %al,(%rax)
 394:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

00000000000003a8 <.dynstr>:
 3a8:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 3ac:	63 2e                	movslq (%rsi),%ebp
 3ae:	73 6f                	jae    41f <_init-0x181>
 3b0:	2e 36 00 70 72       	cs add %dh,%ss:0x72(%rax)
 3b5:	69 6e 74 66 00 63 74 	imul   $0x74630066,0x74(%rsi),%ebp
 3bc:	69 6d 65 00 5f 5f 63 	imul   $0x635f5f00,0x65(%rbp),%ebp
 3c3:	78 61                	js     426 <_init-0x17a>
 3c5:	5f                   	pop    %rdi
 3c6:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 3cc:	7a 65                	jp     433 <_init-0x16d>
 3ce:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3d1:	6c                   	insb   (%dx),%es:(%rdi)
 3d2:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 3d9:	72 74                	jb     44f <_init-0x151>
 3db:	5f                   	pop    %rdi
 3dc:	6d                   	insl   (%dx),%es:(%rdi)
 3dd:	61                   	(bad)  
 3de:	69 6e 00 5f 49 54 4d 	imul   $0x4d54495f,0x0(%rsi),%ebp
 3e5:	5f                   	pop    %rdi
 3e6:	64 65 72 65          	fs gs jb 44f <_init-0x151>
 3ea:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 3f1:	4d 
 3f2:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 3f4:	6f                   	outsl  %ds:(%rsi),(%dx)
 3f5:	6e                   	outsb  %ds:(%rsi),(%dx)
 3f6:	65 54                	gs push %rsp
 3f8:	61                   	(bad)  
 3f9:	62                   	(bad)  
 3fa:	6c                   	insb   (%dx),%es:(%rdi)
 3fb:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 3ff:	67 6d                	insl   (%dx),%es:(%edi)
 401:	6f                   	outsl  %ds:(%rsi),(%dx)
 402:	6e                   	outsb  %ds:(%rsi),(%dx)
 403:	5f                   	pop    %rdi
 404:	73 74                	jae    47a <_init-0x126>
 406:	61                   	(bad)  
 407:	72 74                	jb     47d <_init-0x123>
 409:	5f                   	pop    %rdi
 40a:	5f                   	pop    %rdi
 40b:	00 5f 4a             	add    %bl,0x4a(%rdi)
 40e:	76 5f                	jbe    46f <_init-0x131>
 410:	52                   	push   %rdx
 411:	65 67 69 73 74 65 72 	imul   $0x6c437265,%gs:0x74(%ebx),%esi
 418:	43 6c 
 41a:	61                   	(bad)  
 41b:	73 73                	jae    490 <_init-0x110>
 41d:	65 73 00             	gs jae 420 <_init-0x180>
 420:	5f                   	pop    %rdi
 421:	49 54                	rex.WB push %r12
 423:	4d 5f                	rex.WRB pop %r15
 425:	72 65                	jb     48c <_init-0x114>
 427:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 42e:	4d 
 42f:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 431:	6f                   	outsl  %ds:(%rsi),(%dx)
 432:	6e                   	outsb  %ds:(%rsi),(%dx)
 433:	65 54                	gs push %rsp
 435:	61                   	(bad)  
 436:	62                   	(bad)  
 437:	6c                   	insb   (%dx),%es:(%rdi)
 438:	65 00 47 4c          	add    %al,%gs:0x4c(%rdi)
 43c:	49                   	rex.WB
 43d:	42                   	rex.X
 43e:	43 5f                	rex.XB pop %r15
 440:	32 2e                	xor    (%rsi),%ch
 442:	32 2e                	xor    (%rsi),%ch
 444:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000000446 <.gnu.version>:
 446:	00 00                	add    %al,(%rax)
 448:	00 00                	add    %al,(%rax)
 44a:	02 00                	add    (%rax),%al
 44c:	02 00                	add    (%rax),%al
 44e:	02 00                	add    (%rax),%al
 450:	00 00                	add    %al,(%rax)
 452:	02 00                	add    (%rax),%al
 454:	00 00                	add    %al,(%rax)
 456:	00 00                	add    %al,(%rax)
 458:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000460 <.gnu.version_r>:
 460:	01 00                	add    %eax,(%rax)
 462:	01 00                	add    %eax,(%rax)
 464:	01 00                	add    %eax,(%rax)
 466:	00 00                	add    %al,(%rax)
 468:	10 00                	adc    %al,(%rax)
 46a:	00 00                	add    %al,(%rax)
 46c:	00 00                	add    %al,(%rax)
 46e:	00 00                	add    %al,(%rax)
 470:	75 1a                	jne    48c <_init-0x114>
 472:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 478:	92                   	xchg   %eax,%edx
 479:	00 00                	add    %al,(%rax)
 47b:	00 00                	add    %al,(%rax)
 47d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000480 <.rela.dyn>:
 480:	d8 0d 20 00 00 00    	fmuls  0x20(%rip)        # 4a6 <_init-0xfa>
 486:	00 00                	add    %al,(%rax)
 488:	08 00                	or     %al,(%rax)
 48a:	00 00                	add    %al,(%rax)
 48c:	00 00                	add    %al,(%rax)
 48e:	00 00                	add    %al,(%rax)
 490:	10 07                	adc    %al,(%rdi)
 492:	00 00                	add    %al,(%rax)
 494:	00 00                	add    %al,(%rax)
 496:	00 00                	add    %al,(%rax)
 498:	e0 0d                	loopne 4a7 <_init-0xf9>
 49a:	20 00                	and    %al,(%rax)
 49c:	00 00                	add    %al,(%rax)
 49e:	00 00                	add    %al,(%rax)
 4a0:	08 00                	or     %al,(%rax)
 4a2:	00 00                	add    %al,(%rax)
 4a4:	00 00                	add    %al,(%rax)
 4a6:	00 00                	add    %al,(%rax)
 4a8:	d0 06                	rolb   (%rsi)
 4aa:	00 00                	add    %al,(%rax)
 4ac:	00 00                	add    %al,(%rax)
 4ae:	00 00                	add    %al,(%rax)
 4b0:	38 10                	cmp    %dl,(%rax)
 4b2:	20 00                	and    %al,(%rax)
 4b4:	00 00                	add    %al,(%rax)
 4b6:	00 00                	add    %al,(%rax)
 4b8:	08 00                	or     %al,(%rax)
 4ba:	00 00                	add    %al,(%rax)
 4bc:	00 00                	add    %al,(%rax)
 4be:	00 00                	add    %al,(%rax)
 4c0:	38 10                	cmp    %dl,(%rax)
 4c2:	20 00                	and    %al,(%rax)
 4c4:	00 00                	add    %al,(%rax)
 4c6:	00 00                	add    %al,(%rax)
 4c8:	d0 0f                	rorb   (%rdi)
 4ca:	20 00                	and    %al,(%rax)
 4cc:	00 00                	add    %al,(%rax)
 4ce:	00 00                	add    %al,(%rax)
 4d0:	06                   	(bad)  
 4d1:	00 00                	add    %al,(%rax)
 4d3:	00 01                	add    %al,(%rcx)
	...
 4dd:	00 00                	add    %al,(%rax)
 4df:	00 d8                	add    %bl,%al
 4e1:	0f 20 00             	mov    %cr0,%rax
 4e4:	00 00                	add    %al,(%rax)
 4e6:	00 00                	add    %al,(%rax)
 4e8:	06                   	(bad)  
 4e9:	00 00                	add    %al,(%rax)
 4eb:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 4f6:	00 00                	add    %al,(%rax)
 4f8:	e0 0f                	loopne 509 <_init-0x97>
 4fa:	20 00                	and    %al,(%rax)
 4fc:	00 00                	add    %al,(%rax)
 4fe:	00 00                	add    %al,(%rax)
 500:	06                   	(bad)  
 501:	00 00                	add    %al,(%rax)
 503:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 509 <_init-0x97>
 509:	00 00                	add    %al,(%rax)
 50b:	00 00                	add    %al,(%rax)
 50d:	00 00                	add    %al,(%rax)
 50f:	00 e8                	add    %ch,%al
 511:	0f 20 00             	mov    %cr0,%rax
 514:	00 00                	add    %al,(%rax)
 516:	00 00                	add    %al,(%rax)
 518:	06                   	(bad)  
 519:	00 00                	add    %al,(%rax)
 51b:	00 07                	add    %al,(%rdi)
	...
 525:	00 00                	add    %al,(%rax)
 527:	00 f0                	add    %dh,%al
 529:	0f 20 00             	mov    %cr0,%rax
 52c:	00 00                	add    %al,(%rax)
 52e:	00 00                	add    %al,(%rax)
 530:	06                   	(bad)  
 531:	00 00                	add    %al,(%rax)
 533:	00 08                	add    %cl,(%rax)
	...
 53d:	00 00                	add    %al,(%rax)
 53f:	00 f8                	add    %bh,%al
 541:	0f 20 00             	mov    %cr0,%rax
 544:	00 00                	add    %al,(%rax)
 546:	00 00                	add    %al,(%rax)
 548:	06                   	(bad)  
 549:	00 00                	add    %al,(%rax)
 54b:	00 09                	add    %cl,(%rcx)
	...

Disassembly of section .rela.plt:

0000000000000558 <.rela.plt>:
 558:	18 10                	sbb    %dl,(%rax)
 55a:	20 00                	and    %al,(%rax)
 55c:	00 00                	add    %al,(%rax)
 55e:	00 00                	add    %al,(%rax)
 560:	07                   	(bad)  
 561:	00 00                	add    %al,(%rax)
 563:	00 02                	add    %al,(%rdx)
	...
 56d:	00 00                	add    %al,(%rax)
 56f:	00 20                	add    %ah,(%rax)
 571:	10 20                	adc    %ah,(%rax)
 573:	00 00                	add    %al,(%rax)
 575:	00 00                	add    %al,(%rax)
 577:	00 07                	add    %al,(%rdi)
 579:	00 00                	add    %al,(%rax)
 57b:	00 03                	add    %al,(%rbx)
	...
 585:	00 00                	add    %al,(%rax)
 587:	00 28                	add    %ch,(%rax)
 589:	10 20                	adc    %ah,(%rax)
 58b:	00 00                	add    %al,(%rax)
 58d:	00 00                	add    %al,(%rax)
 58f:	00 07                	add    %al,(%rdi)
 591:	00 00                	add    %al,(%rax)
 593:	00 06                	add    %al,(%rsi)
	...

Disassembly of section .init:

00000000000005a0 <_init>:
 5a0:	48 83 ec 08          	sub    $0x8,%rsp
 5a4:	48 8b 05 35 0a 20 00 	mov    0x200a35(%rip),%rax        # 200fe0 <__gmon_start__>
 5ab:	48 85 c0             	test   %rax,%rax
 5ae:	74 02                	je     5b2 <_init+0x12>
 5b0:	ff d0                	callq  *%rax
 5b2:	48 83 c4 08          	add    $0x8,%rsp
 5b6:	c3                   	retq   

Disassembly of section .plt:

00000000000005c0 <.plt>:
 5c0:	ff 35 42 0a 20 00    	pushq  0x200a42(%rip)        # 201008 <_GLOBAL_OFFSET_TABLE_+0x8>
 5c6:	ff 25 44 0a 20 00    	jmpq   *0x200a44(%rip)        # 201010 <_GLOBAL_OFFSET_TABLE_+0x10>
 5cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000005d0 <ctime@plt>:
 5d0:	ff 25 42 0a 20 00    	jmpq   *0x200a42(%rip)        # 201018 <ctime@GLIBC_2.2.5>
 5d6:	68 00 00 00 00       	pushq  $0x0
 5db:	e9 e0 ff ff ff       	jmpq   5c0 <.plt>

00000000000005e0 <printf@plt>:
 5e0:	ff 25 3a 0a 20 00    	jmpq   *0x200a3a(%rip)        # 201020 <printf@GLIBC_2.2.5>
 5e6:	68 01 00 00 00       	pushq  $0x1
 5eb:	e9 d0 ff ff ff       	jmpq   5c0 <.plt>

00000000000005f0 <time@plt>:
 5f0:	ff 25 32 0a 20 00    	jmpq   *0x200a32(%rip)        # 201028 <time@GLIBC_2.2.5>
 5f6:	68 02 00 00 00       	pushq  $0x2
 5fb:	e9 c0 ff ff ff       	jmpq   5c0 <.plt>

Disassembly of section .plt.got:

0000000000000600 <.plt.got>:
 600:	ff 25 f2 09 20 00    	jmpq   *0x2009f2(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 606:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000610 <_start>:
 610:	31 ed                	xor    %ebp,%ebp
 612:	49 89 d1             	mov    %rdx,%r9
 615:	5e                   	pop    %rsi
 616:	48 89 e2             	mov    %rsp,%rdx
 619:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 61d:	50                   	push   %rax
 61e:	54                   	push   %rsp
 61f:	4c 8d 05 ca 01 00 00 	lea    0x1ca(%rip),%r8        # 7f0 <__libc_csu_fini>
 626:	48 8d 0d 53 01 00 00 	lea    0x153(%rip),%rcx        # 780 <__libc_csu_init>
 62d:	48 8d 3d 0c 01 00 00 	lea    0x10c(%rip),%rdi        # 740 <main>
 634:	ff 15 9e 09 20 00    	callq  *0x20099e(%rip)        # 200fd8 <__libc_start_main@GLIBC_2.2.5>
 63a:	f4                   	hlt    
 63b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000640 <deregister_tm_clones>:
 640:	48 8d 3d f9 09 20 00 	lea    0x2009f9(%rip),%rdi        # 201040 <__TMC_END__>
 647:	48 8d 05 f9 09 20 00 	lea    0x2009f9(%rip),%rax        # 201047 <__TMC_END__+0x7>
 64e:	55                   	push   %rbp
 64f:	48 29 f8             	sub    %rdi,%rax
 652:	48 89 e5             	mov    %rsp,%rbp
 655:	48 83 f8 0e          	cmp    $0xe,%rax
 659:	76 15                	jbe    670 <deregister_tm_clones+0x30>
 65b:	48 8b 05 6e 09 20 00 	mov    0x20096e(%rip),%rax        # 200fd0 <_ITM_deregisterTMCloneTable>
 662:	48 85 c0             	test   %rax,%rax
 665:	74 09                	je     670 <deregister_tm_clones+0x30>
 667:	5d                   	pop    %rbp
 668:	ff e0                	jmpq   *%rax
 66a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 670:	5d                   	pop    %rbp
 671:	c3                   	retq   
 672:	0f 1f 40 00          	nopl   0x0(%rax)
 676:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 67d:	00 00 00 

0000000000000680 <register_tm_clones>:
 680:	48 8d 3d b9 09 20 00 	lea    0x2009b9(%rip),%rdi        # 201040 <__TMC_END__>
 687:	48 8d 35 b2 09 20 00 	lea    0x2009b2(%rip),%rsi        # 201040 <__TMC_END__>
 68e:	55                   	push   %rbp
 68f:	48 29 fe             	sub    %rdi,%rsi
 692:	48 89 e5             	mov    %rsp,%rbp
 695:	48 c1 fe 03          	sar    $0x3,%rsi
 699:	48 89 f0             	mov    %rsi,%rax
 69c:	48 c1 e8 3f          	shr    $0x3f,%rax
 6a0:	48 01 c6             	add    %rax,%rsi
 6a3:	48 d1 fe             	sar    %rsi
 6a6:	74 18                	je     6c0 <register_tm_clones+0x40>
 6a8:	48 8b 05 41 09 20 00 	mov    0x200941(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 6af:	48 85 c0             	test   %rax,%rax
 6b2:	74 0c                	je     6c0 <register_tm_clones+0x40>
 6b4:	5d                   	pop    %rbp
 6b5:	ff e0                	jmpq   *%rax
 6b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 6be:	00 00 
 6c0:	5d                   	pop    %rbp
 6c1:	c3                   	retq   
 6c2:	0f 1f 40 00          	nopl   0x0(%rax)
 6c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 6cd:	00 00 00 

00000000000006d0 <__do_global_dtors_aux>:
 6d0:	80 3d 69 09 20 00 00 	cmpb   $0x0,0x200969(%rip)        # 201040 <__TMC_END__>
 6d7:	75 27                	jne    700 <__do_global_dtors_aux+0x30>
 6d9:	48 83 3d 17 09 20 00 	cmpq   $0x0,0x200917(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 6e0:	00 
 6e1:	55                   	push   %rbp
 6e2:	48 89 e5             	mov    %rsp,%rbp
 6e5:	74 0c                	je     6f3 <__do_global_dtors_aux+0x23>
 6e7:	48 8b 3d 4a 09 20 00 	mov    0x20094a(%rip),%rdi        # 201038 <__dso_handle>
 6ee:	e8 0d ff ff ff       	callq  600 <.plt.got>
 6f3:	e8 48 ff ff ff       	callq  640 <deregister_tm_clones>
 6f8:	5d                   	pop    %rbp
 6f9:	c6 05 40 09 20 00 01 	movb   $0x1,0x200940(%rip)        # 201040 <__TMC_END__>
 700:	f3 c3                	repz retq 
 702:	0f 1f 40 00          	nopl   0x0(%rax)
 706:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 70d:	00 00 00 

0000000000000710 <frame_dummy>:
 710:	48 8d 3d d1 06 20 00 	lea    0x2006d1(%rip),%rdi        # 200de8 <__JCR_END__>
 717:	48 83 3f 00          	cmpq   $0x0,(%rdi)
 71b:	75 0b                	jne    728 <frame_dummy+0x18>
 71d:	e9 5e ff ff ff       	jmpq   680 <register_tm_clones>
 722:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 728:	48 8b 05 b9 08 20 00 	mov    0x2008b9(%rip),%rax        # 200fe8 <_Jv_RegisterClasses>
 72f:	48 85 c0             	test   %rax,%rax
 732:	74 e9                	je     71d <frame_dummy+0xd>
 734:	55                   	push   %rbp
 735:	48 89 e5             	mov    %rsp,%rbp
 738:	ff d0                	callq  *%rax
 73a:	5d                   	pop    %rbp
 73b:	e9 40 ff ff ff       	jmpq   680 <register_tm_clones>

0000000000000740 <main>:
 740:	55                   	push   %rbp
 741:	48 89 e5             	mov    %rsp,%rbp
 744:	48 83 ec 10          	sub    $0x10,%rsp
 748:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
 74c:	48 89 c7             	mov    %rax,%rdi
 74f:	e8 9c fe ff ff       	callq  5f0 <time@plt>
 754:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
 758:	48 89 c7             	mov    %rax,%rdi
 75b:	e8 70 fe ff ff       	callq  5d0 <ctime@plt>
 760:	48 89 c6             	mov    %rax,%rsi
 763:	48 8d 3d 9a 00 00 00 	lea    0x9a(%rip),%rdi        # 804 <_IO_stdin_used+0x4>
 76a:	b8 00 00 00 00       	mov    $0x0,%eax
 76f:	e8 6c fe ff ff       	callq  5e0 <printf@plt>
 774:	b8 00 00 00 00       	mov    $0x0,%eax
 779:	c9                   	leaveq 
 77a:	c3                   	retq   
 77b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000780 <__libc_csu_init>:
 780:	41 57                	push   %r15
 782:	41 56                	push   %r14
 784:	41 89 ff             	mov    %edi,%r15d
 787:	41 55                	push   %r13
 789:	41 54                	push   %r12
 78b:	4c 8d 25 46 06 20 00 	lea    0x200646(%rip),%r12        # 200dd8 <__frame_dummy_init_array_entry>
 792:	55                   	push   %rbp
 793:	48 8d 2d 46 06 20 00 	lea    0x200646(%rip),%rbp        # 200de0 <__init_array_end>
 79a:	53                   	push   %rbx
 79b:	49 89 f6             	mov    %rsi,%r14
 79e:	49 89 d5             	mov    %rdx,%r13
 7a1:	4c 29 e5             	sub    %r12,%rbp
 7a4:	48 83 ec 08          	sub    $0x8,%rsp
 7a8:	48 c1 fd 03          	sar    $0x3,%rbp
 7ac:	e8 ef fd ff ff       	callq  5a0 <_init>
 7b1:	48 85 ed             	test   %rbp,%rbp
 7b4:	74 20                	je     7d6 <__libc_csu_init+0x56>
 7b6:	31 db                	xor    %ebx,%ebx
 7b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 7bf:	00 
 7c0:	4c 89 ea             	mov    %r13,%rdx
 7c3:	4c 89 f6             	mov    %r14,%rsi
 7c6:	44 89 ff             	mov    %r15d,%edi
 7c9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 7cd:	48 83 c3 01          	add    $0x1,%rbx
 7d1:	48 39 dd             	cmp    %rbx,%rbp
 7d4:	75 ea                	jne    7c0 <__libc_csu_init+0x40>
 7d6:	48 83 c4 08          	add    $0x8,%rsp
 7da:	5b                   	pop    %rbx
 7db:	5d                   	pop    %rbp
 7dc:	41 5c                	pop    %r12
 7de:	41 5d                	pop    %r13
 7e0:	41 5e                	pop    %r14
 7e2:	41 5f                	pop    %r15
 7e4:	c3                   	retq   
 7e5:	90                   	nop
 7e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 7ed:	00 00 00 

00000000000007f0 <__libc_csu_fini>:
 7f0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000000007f4 <_fini>:
 7f4:	48 83 ec 08          	sub    $0x8,%rsp
 7f8:	48 83 c4 08          	add    $0x8,%rsp
 7fc:	c3                   	retq   

Disassembly of section .rodata:

0000000000000800 <_IO_stdin_used>:
 800:	01 00                	add    %eax,(%rax)
 802:	02 00                	add    (%rax),%al
 804:	74 68                	je     86e <__GNU_EH_FRAME_HDR+0x5a>
 806:	65 20 64 61 74       	and    %ah,%gs:0x74(%rcx,%riz,2)
 80b:	65 20 69 73          	and    %ch,%gs:0x73(%rcx)
 80f:	3a 20                	cmp    (%rax),%ah
 811:	25                   	.byte 0x25
 812:	73 00                	jae    814 <__GNU_EH_FRAME_HDR>

Disassembly of section .eh_frame_hdr:

0000000000000814 <__GNU_EH_FRAME_HDR>:
 814:	01 1b                	add    %ebx,(%rbx)
 816:	03 3b                	add    (%rbx),%edi
 818:	38 00                	cmp    %al,(%rax)
 81a:	00 00                	add    %al,(%rax)
 81c:	06                   	(bad)  
 81d:	00 00                	add    %al,(%rax)
 81f:	00 ac fd ff ff 84 00 	add    %ch,0x84ffff(%rbp,%rdi,8)
 826:	00 00                	add    %al,(%rax)
 828:	ec                   	in     (%dx),%al
 829:	fd                   	std    
 82a:	ff                   	(bad)  
 82b:	ff ac 00 00 00 fc fd 	ljmp   *-0x2040000(%rax,%rax,1)
 832:	ff                   	(bad)  
 833:	ff 54 00 00          	callq  *0x0(%rax,%rax,1)
 837:	00 2c ff             	add    %ch,(%rdi,%rdi,8)
 83a:	ff                   	(bad)  
 83b:	ff c4                	inc    %esp
 83d:	00 00                	add    %al,(%rax)
 83f:	00 6c ff ff          	add    %ch,-0x1(%rdi,%rdi,8)
 843:	ff e4                	jmpq   *%rsp
 845:	00 00                	add    %al,(%rax)
 847:	00 dc                	add    %bl,%ah
 849:	ff                   	(bad)  
 84a:	ff                   	(bad)  
 84b:	ff 2c 01             	ljmp   *(%rcx,%rax,1)
	...

Disassembly of section .eh_frame:

0000000000000850 <__FRAME_END__-0x108>:
 850:	14 00                	adc    $0x0,%al
 852:	00 00                	add    %al,(%rax)
 854:	00 00                	add    %al,(%rax)
 856:	00 00                	add    %al,(%rax)
 858:	01 7a 52             	add    %edi,0x52(%rdx)
 85b:	00 01                	add    %al,(%rcx)
 85d:	78 10                	js     86f <__GNU_EH_FRAME_HDR+0x5b>
 85f:	01 1b                	add    %ebx,(%rbx)
 861:	0c 07                	or     $0x7,%al
 863:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
 869:	00 00                	add    %al,(%rax)
 86b:	00 1c 00             	add    %bl,(%rax,%rax,1)
 86e:	00 00                	add    %al,(%rax)
 870:	a0 fd ff ff 2b 00 00 	movabs 0x2bfffffd,%al
 877:	00 00 
 879:	00 00                	add    %al,(%rax)
 87b:	00 00                	add    %al,(%rax)
 87d:	00 00                	add    %al,(%rax)
 87f:	00 14 00             	add    %dl,(%rax,%rax,1)
 882:	00 00                	add    %al,(%rax)
 884:	00 00                	add    %al,(%rax)
 886:	00 00                	add    %al,(%rax)
 888:	01 7a 52             	add    %edi,0x52(%rdx)
 88b:	00 01                	add    %al,(%rcx)
 88d:	78 10                	js     89f <__GNU_EH_FRAME_HDR+0x8b>
 88f:	01 1b                	add    %ebx,(%rbx)
 891:	0c 07                	or     $0x7,%al
 893:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 899:	00 00                	add    %al,(%rax)
 89b:	00 1c 00             	add    %bl,(%rax,%rax,1)
 89e:	00 00                	add    %al,(%rax)
 8a0:	20 fd                	and    %bh,%ch
 8a2:	ff                   	(bad)  
 8a3:	ff 40 00             	incl   0x0(%rax)
 8a6:	00 00                	add    %al,(%rax)
 8a8:	00 0e                	add    %cl,(%rsi)
 8aa:	10 46 0e             	adc    %al,0xe(%rsi)
 8ad:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 8b0:	0b 77 08             	or     0x8(%rdi),%esi
 8b3:	80 00 3f             	addb   $0x3f,(%rax)
 8b6:	1a 3b                	sbb    (%rbx),%bh
 8b8:	2a 33                	sub    (%rbx),%dh
 8ba:	24 22                	and    $0x22,%al
 8bc:	00 00                	add    %al,(%rax)
 8be:	00 00                	add    %al,(%rax)
 8c0:	14 00                	adc    $0x0,%al
 8c2:	00 00                	add    %al,(%rax)
 8c4:	44 00 00             	add    %r8b,(%rax)
 8c7:	00 38                	add    %bh,(%rax)
 8c9:	fd                   	std    
 8ca:	ff                   	(bad)  
 8cb:	ff 08                	decl   (%rax)
	...
 8d5:	00 00                	add    %al,(%rax)
 8d7:	00 1c 00             	add    %bl,(%rax,%rax,1)
 8da:	00 00                	add    %al,(%rax)
 8dc:	5c                   	pop    %rsp
 8dd:	00 00                	add    %al,(%rax)
 8df:	00 60 fe             	add    %ah,-0x2(%rax)
 8e2:	ff                   	(bad)  
 8e3:	ff                   	(bad)  
 8e4:	3b 00                	cmp    (%rax),%eax
 8e6:	00 00                	add    %al,(%rax)
 8e8:	00 41 0e             	add    %al,0xe(%rcx)
 8eb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 8f1:	76 0c                	jbe    8ff <__GNU_EH_FRAME_HDR+0xeb>
 8f3:	07                   	(bad)  
 8f4:	08 00                	or     %al,(%rax)
 8f6:	00 00                	add    %al,(%rax)
 8f8:	44 00 00             	add    %r8b,(%rax)
 8fb:	00 7c 00 00          	add    %bh,0x0(%rax,%rax,1)
 8ff:	00 80 fe ff ff 65    	add    %al,0x65fffffe(%rax)
 905:	00 00                	add    %al,(%rax)
 907:	00 00                	add    %al,(%rax)
 909:	42 0e                	rex.X (bad) 
 90b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
 911:	8e 03                	mov    (%rbx),%es
 913:	45 0e                	rex.RB (bad) 
 915:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
 91b:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86301769 <_end+0xffffffff86100721>
 921:	06                   	(bad)  
 922:	48 0e                	rex.W (bad) 
 924:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
 92a:	72 0e                	jb     93a <__GNU_EH_FRAME_HDR+0x126>
 92c:	38 41 0e             	cmp    %al,0xe(%rcx)
 92f:	30 41 0e             	xor    %al,0xe(%rcx)
 932:	28 42 0e             	sub    %al,0xe(%rdx)
 935:	20 42 0e             	and    %al,0xe(%rdx)
 938:	18 42 0e             	sbb    %al,0xe(%rdx)
 93b:	10 42 0e             	adc    %al,0xe(%rdx)
 93e:	08 00                	or     %al,(%rax)
 940:	14 00                	adc    $0x0,%al
 942:	00 00                	add    %al,(%rax)
 944:	c4                   	(bad)  
 945:	00 00                	add    %al,(%rax)
 947:	00 a8 fe ff ff 02    	add    %ch,0x2fffffe(%rax)
	...

0000000000000958 <__FRAME_END__>:
 958:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000200dd8 <__frame_dummy_init_array_entry>:
  200dd8:	10 07                	adc    %al,(%rdi)
  200dda:	00 00                	add    %al,(%rax)
  200ddc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000200de0 <__do_global_dtors_aux_fini_array_entry>:
  200de0:	d0 06                	rolb   (%rsi)
  200de2:	00 00                	add    %al,(%rax)
  200de4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .jcr:

0000000000200de8 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000200df0 <_DYNAMIC>:
  200df0:	01 00                	add    %eax,(%rax)
  200df2:	00 00                	add    %al,(%rax)
  200df4:	00 00                	add    %al,(%rax)
  200df6:	00 00                	add    %al,(%rax)
  200df8:	01 00                	add    %eax,(%rax)
  200dfa:	00 00                	add    %al,(%rax)
  200dfc:	00 00                	add    %al,(%rax)
  200dfe:	00 00                	add    %al,(%rax)
  200e00:	0c 00                	or     $0x0,%al
  200e02:	00 00                	add    %al,(%rax)
  200e04:	00 00                	add    %al,(%rax)
  200e06:	00 00                	add    %al,(%rax)
  200e08:	a0 05 00 00 00 00 00 	movabs 0xd00000000000005,%al
  200e0f:	00 0d 
  200e11:	00 00                	add    %al,(%rax)
  200e13:	00 00                	add    %al,(%rax)
  200e15:	00 00                	add    %al,(%rax)
  200e17:	00 f4                	add    %dh,%ah
  200e19:	07                   	(bad)  
  200e1a:	00 00                	add    %al,(%rax)
  200e1c:	00 00                	add    %al,(%rax)
  200e1e:	00 00                	add    %al,(%rax)
  200e20:	19 00                	sbb    %eax,(%rax)
  200e22:	00 00                	add    %al,(%rax)
  200e24:	00 00                	add    %al,(%rax)
  200e26:	00 00                	add    %al,(%rax)
  200e28:	d8 0d 20 00 00 00    	fmuls  0x20(%rip)        # 200e4e <_DYNAMIC+0x5e>
  200e2e:	00 00                	add    %al,(%rax)
  200e30:	1b 00                	sbb    (%rax),%eax
  200e32:	00 00                	add    %al,(%rax)
  200e34:	00 00                	add    %al,(%rax)
  200e36:	00 00                	add    %al,(%rax)
  200e38:	08 00                	or     %al,(%rax)
  200e3a:	00 00                	add    %al,(%rax)
  200e3c:	00 00                	add    %al,(%rax)
  200e3e:	00 00                	add    %al,(%rax)
  200e40:	1a 00                	sbb    (%rax),%al
  200e42:	00 00                	add    %al,(%rax)
  200e44:	00 00                	add    %al,(%rax)
  200e46:	00 00                	add    %al,(%rax)
  200e48:	e0 0d                	loopne 200e57 <_DYNAMIC+0x67>
  200e4a:	20 00                	and    %al,(%rax)
  200e4c:	00 00                	add    %al,(%rax)
  200e4e:	00 00                	add    %al,(%rax)
  200e50:	1c 00                	sbb    $0x0,%al
  200e52:	00 00                	add    %al,(%rax)
  200e54:	00 00                	add    %al,(%rax)
  200e56:	00 00                	add    %al,(%rax)
  200e58:	08 00                	or     %al,(%rax)
  200e5a:	00 00                	add    %al,(%rax)
  200e5c:	00 00                	add    %al,(%rax)
  200e5e:	00 00                	add    %al,(%rax)
  200e60:	f5                   	cmc    
  200e61:	fe                   	(bad)  
  200e62:	ff 6f 00             	ljmp   *0x0(%rdi)
  200e65:	00 00                	add    %al,(%rax)
  200e67:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  200e6d:	00 00                	add    %al,(%rax)
  200e6f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 200e75 <_DYNAMIC+0x85>
  200e75:	00 00                	add    %al,(%rax)
  200e77:	00 a8 03 00 00 00    	add    %ch,0x3(%rax)
  200e7d:	00 00                	add    %al,(%rax)
  200e7f:	00 06                	add    %al,(%rsi)
  200e81:	00 00                	add    %al,(%rax)
  200e83:	00 00                	add    %al,(%rax)
  200e85:	00 00                	add    %al,(%rax)
  200e87:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  200e8d:	00 00                	add    %al,(%rax)
  200e8f:	00 0a                	add    %cl,(%rdx)
  200e91:	00 00                	add    %al,(%rax)
  200e93:	00 00                	add    %al,(%rax)
  200e95:	00 00                	add    %al,(%rax)
  200e97:	00 9e 00 00 00 00    	add    %bl,0x0(%rsi)
  200e9d:	00 00                	add    %al,(%rax)
  200e9f:	00 0b                	add    %cl,(%rbx)
  200ea1:	00 00                	add    %al,(%rax)
  200ea3:	00 00                	add    %al,(%rax)
  200ea5:	00 00                	add    %al,(%rax)
  200ea7:	00 18                	add    %bl,(%rax)
  200ea9:	00 00                	add    %al,(%rax)
  200eab:	00 00                	add    %al,(%rax)
  200ead:	00 00                	add    %al,(%rax)
  200eaf:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 200eb5 <_DYNAMIC+0xc5>
	...
  200ebd:	00 00                	add    %al,(%rax)
  200ebf:	00 03                	add    %al,(%rbx)
	...
  200ec9:	10 20                	adc    %ah,(%rax)
  200ecb:	00 00                	add    %al,(%rax)
  200ecd:	00 00                	add    %al,(%rax)
  200ecf:	00 02                	add    %al,(%rdx)
  200ed1:	00 00                	add    %al,(%rax)
  200ed3:	00 00                	add    %al,(%rax)
  200ed5:	00 00                	add    %al,(%rax)
  200ed7:	00 48 00             	add    %cl,0x0(%rax)
  200eda:	00 00                	add    %al,(%rax)
  200edc:	00 00                	add    %al,(%rax)
  200ede:	00 00                	add    %al,(%rax)
  200ee0:	14 00                	adc    $0x0,%al
  200ee2:	00 00                	add    %al,(%rax)
  200ee4:	00 00                	add    %al,(%rax)
  200ee6:	00 00                	add    %al,(%rax)
  200ee8:	07                   	(bad)  
  200ee9:	00 00                	add    %al,(%rax)
  200eeb:	00 00                	add    %al,(%rax)
  200eed:	00 00                	add    %al,(%rax)
  200eef:	00 17                	add    %dl,(%rdi)
  200ef1:	00 00                	add    %al,(%rax)
  200ef3:	00 00                	add    %al,(%rax)
  200ef5:	00 00                	add    %al,(%rax)
  200ef7:	00 58 05             	add    %bl,0x5(%rax)
  200efa:	00 00                	add    %al,(%rax)
  200efc:	00 00                	add    %al,(%rax)
  200efe:	00 00                	add    %al,(%rax)
  200f00:	07                   	(bad)  
  200f01:	00 00                	add    %al,(%rax)
  200f03:	00 00                	add    %al,(%rax)
  200f05:	00 00                	add    %al,(%rax)
  200f07:	00 80 04 00 00 00    	add    %al,0x4(%rax)
  200f0d:	00 00                	add    %al,(%rax)
  200f0f:	00 08                	add    %cl,(%rax)
  200f11:	00 00                	add    %al,(%rax)
  200f13:	00 00                	add    %al,(%rax)
  200f15:	00 00                	add    %al,(%rax)
  200f17:	00 d8                	add    %bl,%al
  200f19:	00 00                	add    %al,(%rax)
  200f1b:	00 00                	add    %al,(%rax)
  200f1d:	00 00                	add    %al,(%rax)
  200f1f:	00 09                	add    %cl,(%rcx)
  200f21:	00 00                	add    %al,(%rax)
  200f23:	00 00                	add    %al,(%rax)
  200f25:	00 00                	add    %al,(%rax)
  200f27:	00 18                	add    %bl,(%rax)
  200f29:	00 00                	add    %al,(%rax)
  200f2b:	00 00                	add    %al,(%rax)
  200f2d:	00 00                	add    %al,(%rax)
  200f2f:	00 fb                	add    %bh,%bl
  200f31:	ff                   	(bad)  
  200f32:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f35:	00 00                	add    %al,(%rax)
  200f37:	00 00                	add    %al,(%rax)
  200f39:	00 00                	add    %al,(%rax)
  200f3b:	08 00                	or     %al,(%rax)
  200f3d:	00 00                	add    %al,(%rax)
  200f3f:	00 fe                	add    %bh,%dh
  200f41:	ff                   	(bad)  
  200f42:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f45:	00 00                	add    %al,(%rax)
  200f47:	00 60 04             	add    %ah,0x4(%rax)
  200f4a:	00 00                	add    %al,(%rax)
  200f4c:	00 00                	add    %al,(%rax)
  200f4e:	00 00                	add    %al,(%rax)
  200f50:	ff                   	(bad)  
  200f51:	ff                   	(bad)  
  200f52:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f55:	00 00                	add    %al,(%rax)
  200f57:	00 01                	add    %al,(%rcx)
  200f59:	00 00                	add    %al,(%rax)
  200f5b:	00 00                	add    %al,(%rax)
  200f5d:	00 00                	add    %al,(%rax)
  200f5f:	00 f0                	add    %dh,%al
  200f61:	ff                   	(bad)  
  200f62:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f65:	00 00                	add    %al,(%rax)
  200f67:	00 46 04             	add    %al,0x4(%rsi)
  200f6a:	00 00                	add    %al,(%rax)
  200f6c:	00 00                	add    %al,(%rax)
  200f6e:	00 00                	add    %al,(%rax)
  200f70:	f9                   	stc    
  200f71:	ff                   	(bad)  
  200f72:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f75:	00 00                	add    %al,(%rax)
  200f77:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000200fd0 <.got>:
	...

Disassembly of section .got.plt:

0000000000201000 <_GLOBAL_OFFSET_TABLE_>:
  201000:	f0 0d 20 00 00 00    	lock or $0x20,%eax
	...
  201016:	00 00                	add    %al,(%rax)
  201018:	d6                   	(bad)  
  201019:	05 00 00 00 00       	add    $0x0,%eax
  20101e:	00 00                	add    %al,(%rax)
  201020:	e6 05                	out    %al,$0x5
  201022:	00 00                	add    %al,(%rax)
  201024:	00 00                	add    %al,(%rax)
  201026:	00 00                	add    %al,(%rax)
  201028:	f6 05 00 00 00 00 00 	testb  $0x0,0x0(%rip)        # 20102f <_GLOBAL_OFFSET_TABLE_+0x2f>
	...

Disassembly of section .data:

0000000000201030 <__data_start>:
	...

0000000000201038 <__dso_handle>:
  201038:	38 10                	cmp    %dl,(%rax)
  20103a:	20 00                	and    %al,(%rax)
  20103c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000201040 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 44 65 62          	sub    %al,0x62(%rbp,%riz,2)
   9:	69 61 6e 20 36 2e 33 	imul   $0x332e3620,0x6e(%rcx),%esp
  10:	2e 30 2d 31 32 29 20 	xor    %ch,%cs:0x20293231(%rip)        # 20293248 <_end+0x20092200>
  17:	36 2e 33 2e          	ss xor %cs:(%rsi),%ebp
  1b:	30 20                	xor    %ah,(%rax)
  1d:	32 30                	xor    (%rax),%dh
  1f:	31 37                	xor    %esi,(%rdi)
  21:	30 34 30             	xor    %dh,(%rax,%rsi,1)
  24:	36                   	ss
	...
